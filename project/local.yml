version: "3.9"
name: "medium"

services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    # container_name: medium-api
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    # Following exposes port to host  
    # ports:
    #   - "8000:8000"
    expose:
      - "8000"
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - postgres
      - mailhog
      - redis
    command: /start
    networks:
      - medium-authors-api

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    # container_name: medium-postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - medium-authors-api           

  mailhog:
    image: mailhog/mailhog:v1.0.0
    # container_name: medium-mailhog
    ports:
      - "8025:8025"
    networks:
      - medium-authors-api

  redis:
    image: redis:7-alpine
    networks:
      - medium-authors-api

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celery-worker
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - redis
      - postgres
      - mailhog
    networks:
      - medium-authors-api

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    volumes:
      - .:/app
      - flower_data:/data
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - postgres
    networks:
      - medium-authors-api      
  
  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    networks:
      - medium-authors-api

networks:
  medium-authors-api:
    name: medium-authors-api
    driver: bridge

volumes:
  static_volume:
  media_volume:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  flower_data: {}
